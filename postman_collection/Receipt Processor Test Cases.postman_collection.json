{
	"info": {
		"_postman_id": "d703d63c-37e6-4c76-bb6a-e617a127e460",
		"name": "Receipt Processor Test Cases",
		"description": "A collection of test cases for the Receipt Processor. Submit a receipt and get the corresponding points.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10616268"
	},
	"item": [
		{
			"name": "Test Case 1 - Submit Receipt for Target",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"Target\",\n  \"purchaseDate\": \"2022-01-01\",\n  \"purchaseTime\": \"13:01\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Mountain Dew 12PK\",\n      \"price\": \"6.49\"\n    },\n    {\n      \"shortDescription\": \"Emils Cheese Pizza\",\n      \"price\": \"12.25\"\n    },\n    {\n      \"shortDescription\": \"Knorr Creamy Chicken\",\n      \"price\": \"1.26\"\n    },\n    {\n      \"shortDescription\": \"Doritos Nacho Cheese\",\n      \"price\": \"3.35\"\n    },\n    {\n      \"shortDescription\": \"Klarbrunn 12-PK 12 FL OZ\",\n      \"price\": \"12.00\"\n    }\n  ],\n  \"total\": \"35.35\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 1 - Get Points for Target Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(28)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 2 - Submit Receipt for M&M Corner Market",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"M&M Corner Market\",\n  \"purchaseDate\": \"2022-03-20\",\n  \"purchaseTime\": \"14:33\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    },\n    {\n      \"shortDescription\": \"Gatorade\",\n      \"price\": \"2.25\"\n    }\n  ],\n  \"total\": \"9.00\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 2 - Get Points for M&M Corner Market Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(109)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 3 - Submit Receipt for Walmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"Walmart\",\n  \"purchaseDate\": \"2022-05-15\",\n  \"purchaseTime\": \"16:45\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Apple\",\n      \"price\": \"1.00\"\n    },\n    {\n      \"shortDescription\": \"Orange\",\n      \"price\": \"2.00\"\n    },\n    {\n      \"shortDescription\": \"Banana\",\n      \"price\": \"1.50\"\n    },\n    {\n      \"shortDescription\": \"Milk\",\n      \"price\": \"3.00\"\n    }\n  ],\n  \"total\": \"7.50\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 3 - Get Points for Walmart Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(50)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 4 - Submit Receipt for Whole Foods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"Whole Foods\",\n  \"purchaseDate\": \"2022-04-10\",\n  \"purchaseTime\": \"10:15\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Organic Banana\",\n      \"price\": \"1.25\"\n    },\n    {\n      \"shortDescription\": \"Almond Milk\",\n      \"price\": \"3.99\"\n    }\n  ],\n  \"total\": \"5.24\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 4 - Get Points for Whole Foods Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(15)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 5 - Submit Receipt for CVS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"CVS\",\n  \"purchaseDate\": \"2022-06-25\",\n  \"purchaseTime\": \"08:30\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Toothpaste\",\n      \"price\": \"2.99\"\n    },\n    {\n      \"shortDescription\": \"Shampoo\",\n      \"price\": \"5.49\"\n    },\n    {\n      \"shortDescription\": \"Conditioner\",\n      \"price\": \"5.49\"\n    }\n  ],\n  \"total\": \"13.97\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 5 - Get Points for CVS Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(14)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 6 - Submit Receipt for Costco",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"Costco\",\n  \"purchaseDate\": \"2022-08-30\",\n  \"purchaseTime\": \"17:00\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Kirkland Signature Water\",\n      \"price\": \"5.99\"\n    },\n    {\n      \"shortDescription\": \"Kirkland Signature Almonds\",\n      \"price\": \"12.99\"\n    }\n  ],\n  \"total\": \"18.98\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 6 - Get Points for Costco Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(13)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 7 - Submit Receipt for Trader Joe's",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UUID is received\", function() {",
							"    pm.expect(pm.response.json().id).to.exist;",
							"    pm.environment.set(\"receiptUUID\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"retailer\": \"Trader Joe's\",\n  \"purchaseDate\": \"2022-09-05\",\n  \"purchaseTime\": \"11:00\",\n  \"items\": [\n    {\n      \"shortDescription\": \"Organic Eggs\",\n      \"price\": \"3.99\"\n    },\n    {\n      \"shortDescription\": \"Avocado\",\n      \"price\": \"1.50\"\n    },\n    {\n      \"shortDescription\": \"Almond Butter\",\n      \"price\": \"6.99\"\n    }\n  ],\n  \"total\": \"12.48\"\n}"
				},
				"url": {
					"raw": "localhost:8080/receipts/process",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Case 7 - Get Points for Trader Joe's Receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Points are equal\", function() {",
							"    pm.expect(pm.response.json().points).equal(22)",
							"    ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/receipts/{{receiptUUID}}/points",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"receipts",
						"{{receiptUUID}}",
						"points"
					]
				}
			},
			"response": []
		}
	]
}